#!/bin/sh

# Temporary path change

OLDPATH=$PATH
export PATH=/c/Tools/Ninja:/c/Tools/CMake/bin:/c/Tools/LLVM/bin:${PATH}

CMAKE="cmake.exe"
CLANG="clang-cl.exe"
NINJA="ninja.exe"
LINKER="lld-link.exe"
RC="llvm-rc.exe"

cd libobjc2

git reset --hard
git pull

#
# Fix case in header.  The Windows.h file under the Windows SDK is capitalized.
# The one used in MSYS2 isn't.  It's the same header.  Also disable testing
#
cat safewindows.h | sed 's/Windows.h/windows.h/' > new_safewindows.h
mv new_safewindows.h safewindows.h
cat CMakeLists.txt | sed 's/TESTS TRUE/TESTS FALSE/' > CMakeLists_new.txt
mv CMakeLists_new.txt CMakeLists.txt
cat ivar.c | sed 's/<< ivar_align_shift/<< 3/' > ivar_new.c
mv ivar_new.c ivar.c
cat ivar.h | sed 's/<< ivar_align_shift/<< 3/' > ivar_new.h
mv ivar_new.h ivar.h

#
# Cleanup
#
rm -rf build
mkdir build
cd build

#
# Set environment
#
export CC=${CLANG}
export CXX=${CLANG}

#
# Generate build
#
$CMAKE -G Ninja -DCMAKE_C_COMPILER_WORKS=1 -DCMAKE_CXX_COMPILER_WORKS=1 \
       -DCMAKE_SHARED_LIBRARY_LINK_C_FLAGS="" \
       -DCMAKE_RC_COMPILER=${RC} -DCMAKE_LINKER=${LINKER} -DCMAKE_C_COMPILER=${CLANG} \
       -DCMAKE_CXX_COMPILER=${CLANG} \
       -DCMAKE_C_FLAGS=-I/usr/include -I/mingw64/x86_64-w64-mingw32/include \
       -I/ming64/include -I/usr/include/w32api -Wno-everything -DNO_LEGACY=1 \
       -DCMAKE_CXX_FLAGS=-I/usr/include -I/mingw64/x86_64-w64-mingw32/include \
       -I/ming64/include -I/usr/include/w32api -Wno-everything -DNO_LEGACY=1 \
       -DCMAKE_BUILD_TYPE=Release ..

#
# Build
#
${NINJA}

# Restore old path
export PATH=${OLDPATH}
exit 0
